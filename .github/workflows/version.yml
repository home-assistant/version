name: Version

on:
  workflow_dispatch:
    inputs:
      files:
        description: 'File(s) to run action against'
        required: true
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
    paths:
    - apparmor.txt
    - '*.json'
    - rpi-imager-haos.png
    - homeassistant.pub

env:
  PYTHON_VERSION: "3.10"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3
 
    - name: Lint with JQ
      uses: home-assistant/actions/helpers/jq@master
  
  signing:
    name: Sign ${{ matrix.path }}
    needs: ["lint"]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        path:
          - stable.json
          - beta.json
          - dev.json
          - apparmor.txt
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'

      - name: Sign
        uses: home-assistant/actions/helpers/codenotary@master
        with:
          source: ${{ matrix.path }}
          token: ${{ secrets.CAS_TOKEN }}
      
      - name: Upload file
        run: |
          cosign upload blob -f ${{ matrix.path }} ghcr.io/home-assistant/version/${{ matrix.path }}
      
      - id: docker_meta
        uses: docker/metadata-action@v3.6.0
        with:
          images: ghcr.io/home-assistant/version/${{ matrix.path }}
          tags: type=sha,format=long
      
      - name: Sign file
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY --output-signature ${{ matrix.path }}.sig ${TAGS}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_KEY }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}

  upload:
    name: Upload
    needs: ["signing"]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v3

    - name: Setup Python version ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Get changed files for push
      if: github.event_name == 'push'
      id: changed_files_push
      uses: jitterbit/get-changed-files@v1

    - name: Get changed files
      id: changed_files
      run: |
        if [[ ${{ github.event_name }} == "push" ]]; then
          echo "::set-output name=files::${{ steps.changed_files_push.outputs.all }}"
        else
          echo "::set-output name=files::${{ github.event.inputs.files }}"
        fi

    - name: Install AWS CLI
      run: pip install awscli

    - name: Upload files
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEYÂ }}
      run: |
        for file in ${{ steps.changed_files.outputs.files }}; do
          if [[ "$file" =~ \.txt|\.json|\.png ]]; then
            aws s3 sync . s3://version.home-assistant.io --exclude "*" --include "$file"
          fi
        done

    - name: Gather files for cache flush
      id: flush
      run: |
        declare -a files
        for file in ${{ steps.changed_files.outputs.files }}; do
          if [[ "$file" =~ \.txt|\.json ]]; then
            files+=("\"https:\/\/version.home-assistant.io\/$file\", ")
          fi
        done
        echo "::set-output name=files::[$(echo ${files[@]} | rev | cut -c 2- | rev)]"

    - name: Flush CloudFlare cache
      run: |
        curl --silent --show-error --fail -X POST \
          "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CF_TOKEN }}" \
          -H "Content-Type: application/json" \
          --data '{"files": ${{ steps.flush.outputs.files }}}'
